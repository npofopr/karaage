/*======================================
=            precss example            =
======================================*/

/* Imports */
/* @import "cssrecipes-defaults"; /* == @import "./node_modules/cssrecipes-defaults/index.css"; */
@import "_variable.css";
/*@import "_variable.css" (min-width: 25em);*/

/* Variables */
$colorfore: #333;
$colorback: #fff;
$blue: #056ef0;
$column: 200px;
$npofopr_text: yellow;

/* Conditionals */
.notice--clear {
    @if 3 < 5 {
        background: green;
    }
    @else {
        background: blue;
    }
}

/* Loops */
@for $i from 1 to 3 {
    .b-$i { width: $(i)px; }
}
@each $icon in (foo, bar, baz) {
    .icon-$(icon) {
        background: url('icons/$(icon).png');
    }
}

/* Mixins */
@define-mixin icon $name {
    padding-left: 16px;

    &::after {
        content: "";
        background-url: url(/icons/$(name).png);
    }
}
@define-mixin reset {
	padding: 0;
	margin: 0;
}
.search {
    @mixin icon search;
}

/* Extends */
@define-extend bg-green {
    background: green;
}
.notice--clear {
    @extend bg-green;
}

/* Property Lookup */
.heading,
.logo {
    margin: 20px;
    padding: @margin;
}

/* Root */
.parent {
    background: white;

    @at-root{
        .child {
            background: black;
        }
    }
}

/*=====  End of precss example  ======*/

/*==============================================
=            postcss-center example            =
==============================================*/

.postcss-center {
	top: center;
	left: center;
}
.postcss-center-top {
	top: center;
}
.postcss-center-left {
	left: center;
}

/*=====  End of postcss-center example  ======*/

/*===============================
=            pxtorem            =
===============================*/

/* `px` is converted to `rem` */
.pxtorem-convert {
    font-size: 16px;
}
/* `Px` or `PX` is ignored by `postcss-pxtorem` but still accepted by browsers */
.pxtorem-convert-ignore {
    border: 1Px solid;
    border-width: 2PX;
}

/*=====  End of pxtorem  ======*/


/*================================================
=            postcss-clearfix example            =
================================================*/

.postcss-clearfix-foo {
	clear: fix; /* IE8+ */
}
.postcss-clearfix-bar {
	clear: fix-legacy; /* IE6+ */
}

/*=====  End of postcss-clearfix example  ======*/

/*=============================================
=            postcss-focus example            =
=============================================*/

*:focus {
	outline: 0;
}
.button:hover {
	background: red;
}

/*=====  End of postcss-focus example  ======*/

/*==============================================
=            postcss-nested example            =
==============================================*/

/* plugin to unwrap nested rules like how Sass does it */
.phone {
    &_title {
        width: 500px;
        @media (max-width: 500px) {
            width: auto;
        }
        body.is_dark & {
            color: white;
        }
    }
    img {
        display: block;
    }
}

/*=====  End of postcss-nested example  ======*/

/*============================================
=            css-mqpacker example            =
============================================*/
/* Pack same CSS media query rules into one media query rule. */

.css-mqpacker-foo::before {
	content: "foo on small";
}
@media screen and (min-width: 769px) {
	.css-mqpacker-foo::before {
		content: "foo on medium";
	}
}
.css-mqpacker-bar::before {
	content: "bar on small";
}
@media screen and (min-width: 769px) {
	.css-mqpacker-bar::before {
		content: "bar on medium";
	}
}

/*=====  End of css-mqpacker example  ======*/

/*====================================================
=            postcss-media-minmax example            =
====================================================*/

@media screen and (width >= 500px) and (width <= 1200px) {
	.postcss-media-minmax-bar {
		display: block;
	}
}

@media screen and (500px <= width <= 1200px) {
	.postcss-media-minmax-bar2 {
		display: block;
	}
}
/* Or */
@media screen and (1200px >= width >= 500px) {
	.postcss-media-minmax-bar3 {
		display: block;
	}
}

/*=====  End of postcss-media-minmax example  ======*/

/*====================================================
=            postcss-custom-media example            =
====================================================*/

@custom-media --small-viewport (max-width: 30em);

@media (--small-viewport) {
	.postcss-custom-media {
		width: 100%;
	}
}

/*=====  End of postcss-custom-media example  ======*/


/*===================================================
=            postcss-inline-svg example            =
===================================================*/

@svg-load nav url(../images/svg/icon_auth.svg) {
    fill: #cfc;
    path:nth-child(2) {
        fill: #ff0;
    }
}
.postcss-inline-svg-nav {
    background: svg-inline(nav);
}

@svg-load up url(../images/svg/loupe.svg) {
    #handle {
        stroke: red;
    }
    .glass {
        stroke: green;
    }
}
.postcss-inline-svg-up {
    background: svg-inline(up);
}
/*.postcss-inline-svg-up {
    background: svg-load(../images/svg/loupe.svg, "handle[stroke]": #ff0, stroke: #f00);
}*/

.postcss-inline-svg {
    width: 30px;
	height: 30px;
	display: inline-block;
}

/*.postcss-svg {
	width: 30px;
	height: 30px;
	display: inline-block;
	background-image: svg("icon_auth", "[color]: red");
}
.postcss-svg-tag-name,
.postcss-svg-class-name,
.postcss-svg-color-group,
.postcss-svg-identifier,
.postcss-svg-color-index {
	width: 30px;
	height: 30px;
	display: inline-block;
	position: relative;
}
.postcss-svg-tag-name {
	background-image: svg("loupe", "circle[fill]: rgba(105, 200, 250, .2); circle[stroke]: gray; path[stroke]: brown;");
}
.postcss-svg-class-name {
	background-image: svg("loupe", ".glass[fill]: rgba(105, 200, 250, .2);");
}
.postcss-svg-color-group {
	background-image: svg("loupe", "colorGroup0: red; colorGroup1: blue;");
}
.postcss-svg-identifier {
	background-image: svg("loupe", "#rim[fill]: rgba(105, 200, 250, .2); #rim[stroke]: gray; #handle[stroke]: brown;");
}
.postcss-svg-color-index {
	background-image: svg("loupe", "color0: rgba(105, 200, 250, .2); color1: gray; color2: brown;");
}*/

/*=====  End of postcss-inline-svg example  ======*/

/*===============================================
=            postcss-easings example            =
===============================================*/
/* plugin to replace easing name from easings.net to cubic-bezier(). */

.snake {
	transition: all 600ms ease-in-sine;
}
.camel {
	transition: all 600ms easeInSine;
}

/*=====  End of postcss-easings example  ======*/

/*=====================================================
=            postcss-font-magician example            =
=====================================================*/

.postcss-font-magician {
	font-family: "Alice";
}

/*=====  End of postcss-font-magician example  ======*/

/*=====================================================
=            .postcss-svg-fallback example            =
=====================================================*/

.postcss-svg-fallback-icon {
	background: url(../images/svg/icon_reg.svg) no-repeat;
	background-size: 33px 33px;

	width: 33px;
	height: @width;
}
/*.postcss-svg-fallback-icon-inline {
	background: url(data:image/svg+xml; .. svg data ..) no-repeat;
	background-size: 20px 20px;
}*/

/*=====  End of .postcss-svg-fallback example  ======*/

/*============================================
=            postcss-at2x example            =
============================================*/

.logo {
	background: red url('../images/logo.png') no-repeat 0 0 at-2x;
}

/*=====  End of postcss-at2x example  ======*/

/*======================================================
=            postcss-flexbugs-fixes example            =
======================================================*/

.postcss-flexbugs-fixes-foo { flex: 1; }
.postcss-flexbugs-fixes-bar { flex: 1 1; }
.postcss-flexbugs-fixes-foz { flex: 1 1 0; }
.postcss-flexbugs-fixes-baz { flex: 1 1 0px; }
.postcss-flexbugs-fixes-daz { flex: 1 0 calc(1vw - 1px); }

/*=====  End of postcss-flexbugs-fixes example  ======*/

/*====================================================
=            postcss-font-variant example            =
====================================================*/

.postcss-font-variant h2 {
	font-variant-caps: small-caps;
}

.postcss-font-variant table {
	font-variant-numeric: lining-nums;
}

/*=====  End of postcss-font-variant example  ======*/

/*====================================
=            lost example            =
====================================*/

.container {
	lost-utility: clearfix;
	.col {
		lost-column: 1/3;
	}
}

/*=====  End of lost example  ======*/

/*====================================
=            postcss-neat            =
====================================*/

.postcss-neat_container {
	@neat-outer-container;
	.postcss-neat_parent-element {
		@neat-span-columns 8;
		.postcss-neat_element {
			@neat-span-columns 6 8;
			background-color: yellow;
		}
	}
}

/*=====  End of postcss-neat  ======*/

/* ==========================================================================
   Postcss-animation
   ========================================================================== */

.postcss-animation {
    animation-name: bounce;
}

/*=====  End of Postcss-animation  ======*/


/* ==========================================================================
   Postcss-color-alpha
   ========================================================================== */
.postcss-color-alpha-foo { color: black(.1) }
.postcss-color-alpha-bar { color: white(0.2); }
.postcss-color-alpha-baz { color: #0fc.3; }
.postcss-color-alpha-woo { color: #00ffcc.45; }
.postcss-color-alpha-hoo { border-color: #000 #000.5 white white(0.5); }
.postcss-color-alpha-boo { text-shadow: 1px 1px 1px #0fc.1, 3px 3px 5px rgba(#fff, .5); }



/* ==========================================================================
   Postcss-sprites
   ========================================================================== */
.postcss-sprite-icon {
    width: 32px;
    height: 32px;
    display: inline-block;
    margin: 30px;
    border: 1px solid red;
}
.postcss-sprite-comment {
    background: url(../images/sprite/icon-oil_pump_jack.png) no-repeat 0 0;
    &:hover {
        background: url(../images/sprite/icon-oil_pump_jack-active.png) no-repeat 0 0;
    }
}
.postcss-sprite-bubble {
    background: url(../images/sprite/icon-oil_rig.png) no-repeat 0 0;
    &:hover {
        background: url(../images/sprite/icon-oil_rig-active.png) no-repeat 0 0;
    }
}



.npofopr {
	color: $npofopr_text;
	background: red;
	box-shadow: 1px 1px 1px red;
	opacity: .5;
	text-shadow: 0 1px 1px black;
	background-image: resolve(contact1.jpg);
}
.npofopr2 {
	background: inline(../images/contact1.jpg);
	size: 100px;
}

main {
	font-family: Arial;
	@mixin reset;
	color: $colorfore;
	background-color: $colorback;

	article {
		color: $colorback;
		background-color: $colorfore;
		&:hover {
			color: red;
		}
	}
}

.menu {
	width: calc(4 * $column);
}
.menu_link {
	background: $blue;
	width: $column;
}

h1 {
	margin: 0 auto;
	margin: 0 auto;
	font-weight: normal;
}

h2 {}
{
	color: blue;
}

a {
	color: blue;
}
a {
	font-weight: bold;
}
a {
	color: blue;
	font-weight: bold;
}
p {
	color: blue;
	font-weight: bold;
}


/*
@styleguide

# I love Twitter Bootstrap

Use the button classes on an `<a>`, `<button>`, `<input>` element.

<button class="styleguide-btn">Button</button>

    <button class="styleguide-btn">Button</button>

*/
.styleguide-btn {
    display: inline-block;
    padding: 6px 12px;
    margin-bottom: 0;
    font-size: 14px;
    font-weight: normal;
    line-height: 1.42857143;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}

.styleguide-btn:hover,
.styleguide-btn:focus,
.styleguide-btn.focus {
    color: #333;
    text-decoration: none;
}
